# Configure the controller manager deployment
controllerManager:
  replicas: 1
  image:
    repository: "ghcr.io/crashappsec/ocular-controller"
    tag: "v0.2.1-beta.2"
    pullPolicy: "IfNotPresent"
  # Additional labels to add to the controller manager deployment
  labels: {}
  # Additional environment variables to add to the controller manager container
  env: []
  # Additional volumes to add to the controller manager pod
  volumes: []
  volumeMounts: []
  # Pod-level security settings
  podSecurityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  # Container-level security settings
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
  # Resource limits and requests
  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 64Mi
# Configure the extractor image
# This is the image that is used by ocular
# To facilitate the transfer of artfacts from
# scanners to uploaders
extractor:
  image:
    repository: "ghcr.io/crashappsec/ocular-extractor"
    tag: "v0.2.1-beta.2"
    pullPolicy: Always
# Essential RBAC permissions (required for controller operation)
# These include ServiceAccount, controller permissions, leader election, and metrics access
# Note: Essential RBAC is always enabled as it's required for the controller to function

# Helper RBAC roles for managing custom resources
# These provide convenient admin/editor/viewer roles for each CRD type
# Useful for giving users different levels of access to your custom resources
rbacHelpers:
  enable: false # Install convenience admin/editor/viewer roles for CRDs
# Custom Resource Definitions
crd:
  enable: true # Install CRDs with the chart
  keep: true # Keep CRDs when uninstalling
# Controller metrics endpoint.
# Enable to expose /metrics endpoint with RBAC protection.
metrics:
  enable: true
# Cert-manager integration for TLS certificates.
# Required for webhook certificates and metrics endpoint certificates.
certManager:
  enable: true
# Prometheus ServiceMonitor for metrics scraping.
# Requires prometheus-operator to be installed in the cluster.
prometheus:
  enable: false
